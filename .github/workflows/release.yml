name: Release

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  check_manifest:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: check-manifest --hook-stage manual

  build_project:
    needs: check_manifest
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build project
        run: |
          python -m pip install build
          python -m build

      - name: Store build files
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
          retention-days: 5

  test_wheels:
    needs: build_project
    name: Test wheels on ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-22.04, macOS-12, windows-2022 ]
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - if: matrix.os == 'windows-2022'
        name: Windows wheel filename
        run: echo "WHEELNAME=$(ls ./dist/tsml-*-none-any.whl)" >> $env:GITHUB_ENV
      - if: matrix.os != 'windows-2022'
        name: Unix wheel filename
        run: echo "WHEELNAME=$(ls ./dist/tsml-*-none-any.whl)" >> $GITHUB_ENV

      - if: matrix.os == 'windows-2022'
        name: Windows install
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install "${env:WHEELNAME}[dev,all_extras,unstable_extras]"
      - if: matrix.os != 'windows-2022'
        name: Unix install
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install "${{ env.WHEELNAME }}[dev,all_extras,unstable_extras]"

      - name: Tests
        run: python -m pytest

  upload_wheels:
    needs: test_wheels
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
